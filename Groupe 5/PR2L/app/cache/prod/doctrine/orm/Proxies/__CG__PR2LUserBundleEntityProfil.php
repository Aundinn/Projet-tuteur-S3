<?php

namespace Proxies\__CG__\PR2L\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Profil extends \PR2L\UserBundle\Entity\Profil implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'id', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userLogin', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userPwd', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userNom', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userPrenom', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userTelephone', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userEmail', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsAdherent', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsContributeur', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsModerateur', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsAdmin', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userFonction', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userDateDerniereConnexion', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userCanWrite', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userCanRead');
        }

        return array('__isInitialized__', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'id', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userLogin', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userPwd', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userNom', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userPrenom', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userTelephone', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userEmail', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsAdherent', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsContributeur', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsModerateur', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userIsAdmin', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userFonction', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userDateDerniereConnexion', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userCanWrite', '' . "\0" . 'PR2L\\UserBundle\\Entity\\Profil' . "\0" . 'userCanRead');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Profil $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserLogin($userLogin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserLogin', array($userLogin));

        return parent::setUserLogin($userLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserLogin', array());

        return parent::getUserLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPwd($userPwd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPwd', array($userPwd));

        return parent::setUserPwd($userPwd);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPwd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPwd', array());

        return parent::getUserPwd();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserNom($userNom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserNom', array($userNom));

        return parent::setUserNom($userNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserNom', array());

        return parent::getUserNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPrenom($userPrenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPrenom', array($userPrenom));

        return parent::setUserPrenom($userPrenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPrenom', array());

        return parent::getUserPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserTelephone($userTelephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserTelephone', array($userTelephone));

        return parent::setUserTelephone($userTelephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserTelephone', array());

        return parent::getUserTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail($userEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', array($userEmail));

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', array());

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIsAdherent($userIsAdherent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIsAdherent', array($userIsAdherent));

        return parent::setUserIsAdherent($userIsAdherent);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIsAdherent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIsAdherent', array());

        return parent::getUserIsAdherent();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIsContributeur($userIsContributeur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIsContributeur', array($userIsContributeur));

        return parent::setUserIsContributeur($userIsContributeur);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIsContributeur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIsContributeur', array());

        return parent::getUserIsContributeur();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIsModerateur($userIsModerateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIsModerateur', array($userIsModerateur));

        return parent::setUserIsModerateur($userIsModerateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIsModerateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIsModerateur', array());

        return parent::getUserIsModerateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIsAdmin($userIsAdmin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIsAdmin', array($userIsAdmin));

        return parent::setUserIsAdmin($userIsAdmin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIsAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIsAdmin', array());

        return parent::getUserIsAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserFonction($userFonction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserFonction', array($userFonction));

        return parent::setUserFonction($userFonction);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserFonction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserFonction', array());

        return parent::getUserFonction();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserDateDerniereConnexion($userDateDerniereConnexion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserDateDerniereConnexion', array($userDateDerniereConnexion));

        return parent::setUserDateDerniereConnexion($userDateDerniereConnexion);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserDateDerniereConnexion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserDateDerniereConnexion', array());

        return parent::getUserDateDerniereConnexion();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCanWrite($userCanWrite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCanWrite', array($userCanWrite));

        return parent::setUserCanWrite($userCanWrite);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCanWrite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCanWrite', array());

        return parent::getUserCanWrite();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCanRead($userCanRead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCanRead', array($userCanRead));

        return parent::setUserCanRead($userCanRead);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCanRead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCanRead', array());

        return parent::getUserCanRead();
    }

}
